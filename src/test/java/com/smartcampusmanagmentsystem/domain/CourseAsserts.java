package com.smartcampusmanagmentsystem.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseAllPropertiesEquals(Course expected, Course actual) {
        assertCourseAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseAllUpdatablePropertiesEquals(Course expected, Course actual) {
        assertCourseUpdatableFieldsEquals(expected, actual);
        assertCourseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseAutoGeneratedPropertiesEquals(Course expected, Course actual) {
        assertThat(actual)
            .as("Verify Course auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseUpdatableFieldsEquals(Course expected, Course actual) {
        assertThat(actual)
            .as("Verify Course relevant properties")
            .satisfies(a -> assertThat(a.getCourseName()).as("check courseName").isEqualTo(expected.getCourseName()))
            .satisfies(a -> assertThat(a.getCourseCode()).as("check courseCode").isEqualTo(expected.getCourseCode()))
            .satisfies(a -> assertThat(a.getDepartment()).as("check department").isEqualTo(expected.getDepartment()))
            .satisfies(a -> assertThat(a.getDuration()).as("check duration").isEqualTo(expected.getDuration()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseUpdatableRelationshipsEquals(Course expected, Course actual) {
        // empty method
    }
}
