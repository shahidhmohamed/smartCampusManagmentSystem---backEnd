package com.smartcampusmanagmentsystem.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseRegistrationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseRegistrationAllPropertiesEquals(CourseRegistration expected, CourseRegistration actual) {
        assertCourseRegistrationAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseRegistrationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseRegistrationAllUpdatablePropertiesEquals(CourseRegistration expected, CourseRegistration actual) {
        assertCourseRegistrationUpdatableFieldsEquals(expected, actual);
        assertCourseRegistrationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseRegistrationAutoGeneratedPropertiesEquals(CourseRegistration expected, CourseRegistration actual) {
        assertThat(actual)
            .as("Verify CourseRegistration auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseRegistrationUpdatableFieldsEquals(CourseRegistration expected, CourseRegistration actual) {
        assertThat(actual)
            .as("Verify CourseRegistration relevant properties")
            .satisfies(a -> assertThat(a.getStudentId()).as("check studentId").isEqualTo(expected.getStudentId()))
            .satisfies(a -> assertThat(a.getCourseId()).as("check courseId").isEqualTo(expected.getCourseId()))
            .satisfies(a -> assertThat(a.getCourseCode()).as("check courseCode").isEqualTo(expected.getCourseCode()))
            .satisfies(a -> assertThat(a.getDuration()).as("check duration").isEqualTo(expected.getDuration()))
            .satisfies(a -> assertThat(a.getRegistrationDate()).as("check registrationDate").isEqualTo(expected.getRegistrationDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseRegistrationUpdatableRelationshipsEquals(CourseRegistration expected, CourseRegistration actual) {
        // empty method
    }
}
