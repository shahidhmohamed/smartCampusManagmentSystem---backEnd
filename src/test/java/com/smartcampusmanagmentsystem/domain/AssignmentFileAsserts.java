package com.smartcampusmanagmentsystem.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AssignmentFileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssignmentFileAllPropertiesEquals(AssignmentFile expected, AssignmentFile actual) {
        assertAssignmentFileAutoGeneratedPropertiesEquals(expected, actual);
        assertAssignmentFileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssignmentFileAllUpdatablePropertiesEquals(AssignmentFile expected, AssignmentFile actual) {
        assertAssignmentFileUpdatableFieldsEquals(expected, actual);
        assertAssignmentFileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssignmentFileAutoGeneratedPropertiesEquals(AssignmentFile expected, AssignmentFile actual) {
        assertThat(actual)
            .as("Verify AssignmentFile auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssignmentFileUpdatableFieldsEquals(AssignmentFile expected, AssignmentFile actual) {
        assertThat(actual)
            .as("Verify AssignmentFile relevant properties")
            .satisfies(a -> assertThat(a.getStudentId()).as("check studentId").isEqualTo(expected.getStudentId()))
            .satisfies(a -> assertThat(a.getAssignmentId()).as("check assignmentId").isEqualTo(expected.getAssignmentId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getFileSize()).as("check fileSize").isEqualTo(expected.getFileSize()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getModifiedAt()).as("check modifiedAt").isEqualTo(expected.getModifiedAt()))
            .satisfies(a -> assertThat(a.getMimeType()).as("check mimeType").isEqualTo(expected.getMimeType()))
            .satisfies(a -> assertThat(a.getExtension()).as("check extension").isEqualTo(expected.getExtension()))
            .satisfies(a -> assertThat(a.getBinaryData()).as("check binaryData").isEqualTo(expected.getBinaryData()))
            .satisfies(a ->
                assertThat(a.getBinaryDataContentType()).as("check binaryData contenty type").isEqualTo(expected.getBinaryDataContentType())
            )
            .satisfies(a -> assertThat(a.getMarkingStatus()).as("check markingStatus").isEqualTo(expected.getMarkingStatus()))
            .satisfies(a -> assertThat(a.getGrade()).as("check grade").isEqualTo(expected.getGrade()))
            .satisfies(a -> assertThat(a.getFeedback()).as("check feedback").isEqualTo(expected.getFeedback()))
            .satisfies(a -> assertThat(a.getGradedBy()).as("check gradedBy").isEqualTo(expected.getGradedBy()))
            .satisfies(a -> assertThat(a.getGradedAt()).as("check gradedAt").isEqualTo(expected.getGradedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssignmentFileUpdatableRelationshipsEquals(AssignmentFile expected, AssignmentFile actual) {
        // empty method
    }
}
